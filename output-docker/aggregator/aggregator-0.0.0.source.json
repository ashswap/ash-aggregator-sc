{
    "schemaVersion": "2.0.0",
    "metadata": {
        "contractName": "aggregator",
        "contractVersion": "0.0.0",
        "buildMetadata": {
            "builderName": "multiversx/sdk-rust-contract-builder:v5.3.0",
            "versionRust": "nightly-2023-05-26",
            "versionBinaryen": "version_112",
            "versionWabt": "1.0.27-1",
            "versionScTool": "0.43.3",
            "targetPlatform": "linux/amd64"
        },
        "buildOptions": {
            "packageWholeProjectSrc": false,
            "specificContract": null,
            "cargoTargetDir": "/rust/cargo-target-dir",
            "noWasmOpt": false,
            "buildRootFolder": "/tmp/project"
        }
    },
    "entries": [
        {
            "path": "dex/aggregator/Cargo.toml",
            "content": "W3BhY2thZ2VdCm5hbWUgPSAiYWdncmVnYXRvciIKdmVyc2lvbiA9ICIwLjAuMCIKYXV0aG9ycyA9IFsiQmljYXJ1cyA8aGVsbG9AYmljYXJ1cy5pbz4iXQplZGl0aW9uID0gIjIwMjEiCnB1Ymxpc2ggPSBmYWxzZQoKW2xpYl0KcGF0aCA9ICJzcmMvbGliLnJzIgoKW2RlcGVuZGVuY2llcy5jb21tb24tZXJyb3JzXQpwYXRoID0gIi4uLy4uL2NvbW1vbi9lcnJvcnMiCgpbZGVwZW5kZW5jaWVzLmNvbW1vbi1zdHJ1Y3RzXQpwYXRoID0gIi4uLy4uL2NvbW1vbi9zdHJ1Y3RzIgoKW2RlcGVuZGVuY2llcy50b2tlbl9zZW5kXQpwYXRoID0gIi4uLy4uL2NvbW1vbi90b2tlbl9zZW5kIgoKW2RlcGVuZGVuY2llcy5tdWx0aXZlcnN4LXNjXQp2ZXJzaW9uID0gIjAuNDAuMCIKZmVhdHVyZXMgPSBbImVzZHQtdG9rZW4tcGF5bWVudC1sZWdhY3ktZGVjb2RlIl0K",
            "module": "dex/aggregator",
            "dependencyDepth": 0,
            "isTestFile": false
        },
        {
            "path": "dex/aggregator/meta/Cargo.toml",
            "content": "W3BhY2thZ2VdCm5hbWUgPSAiYWdncmVnYXRvci1tZXRhIgp2ZXJzaW9uID0gIjAuMC4wIgphdXRob3JzID0gWyAiQmljYXJ1cyA8aGVsbG9AYmljYXJ1cy5pbz4iLF0KZWRpdGlvbiA9ICIyMDIxIgpwdWJsaXNoID0gZmFsc2UKCltkZXBlbmRlbmNpZXMuYWdncmVnYXRvcl0KcGF0aCA9ICIuLiIKCltkZXBlbmRlbmNpZXMubXVsdGl2ZXJzeC1zYy1tZXRhXQp2ZXJzaW9uID0gIjAuNDAuMCIK",
            "module": "dex/aggregator",
            "dependencyDepth": 0,
            "isTestFile": false
        },
        {
            "path": "dex/aggregator/meta/src/main.rs",
            "content": "Zm4gbWFpbigpIHsKICAgIG11bHRpdmVyc3hfc2NfbWV0YTo6Y2xpX21haW46OjxhZ2dyZWdhdG9yOjpBYmlQcm92aWRlcj4oKTsKfQo=",
            "module": "dex/aggregator",
            "dependencyDepth": 0,
            "isTestFile": false
        },
        {
            "path": "dex/aggregator/multiversx.json",
            "content": "ewogICAgImxhbmd1YWdlIjogInJ1c3QiCn0=",
            "module": "dex/aggregator",
            "dependencyDepth": 0,
            "isTestFile": false
        },
        {
            "path": "dex/aggregator/src/lib.rs",
            "content": "",
            "module": "dex/aggregator",
            "dependencyDepth": 0,
            "isTestFile": false
        },
        {
            "path": "dex/aggregator/wasm/Cargo.lock",
            "content": "",
            "module": "dex/aggregator",
            "dependencyDepth": 0,
            "isTestFile": false
        },
        {
            "path": "dex/aggregator/wasm/Cargo.toml",
            "content": "W3BhY2thZ2VdCm5hbWUgPSAiYWdncmVnYXRvci13YXNtIgp2ZXJzaW9uID0gIjAuMC4wIgphdXRob3JzID0gWyAiQmljYXJ1cyA8aGVsbG9AYmljYXJ1cy5pbz4iLF0KZWRpdGlvbiA9ICIyMDIxIgpwdWJsaXNoID0gZmFsc2UKCltsaWJdCmNyYXRlLXR5cGUgPSBbICJjZHlsaWIiLF0KClt3b3Jrc3BhY2VdCm1lbWJlcnMgPSBbICIuIixdCgpbcHJvZmlsZS5yZWxlYXNlXQpjb2RlZ2VuLXVuaXRzID0gMQpvcHQtbGV2ZWwgPSAieiIKbHRvID0gdHJ1ZQpkZWJ1ZyA9IGZhbHNlCnBhbmljID0gImFib3J0IgoKW2RlcGVuZGVuY2llcy5hZ2dyZWdhdG9yXQpwYXRoID0gIi4uIgoKW2RlcGVuZGVuY2llcy5tdWx0aXZlcnN4LXNjLXdhc20tYWRhcHRlcl0KdmVyc2lvbiA9ICIwLjQwLjAiCg==",
            "module": "dex/aggregator",
            "dependencyDepth": 0,
            "isTestFile": false
        },
        {
            "path": "dex/aggregator/wasm/src/lib.rs",
            "content": "Ly8gQ29kZSBnZW5lcmF0ZWQgYnkgdGhlIG11bHRpdmVyc3gtc2MgbXVsdGktY29udHJhY3Qgc3lzdGVtLiBETyBOT1QgRURJVC4KCi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8KLy8vLy8vLy8vLy8vLy8vLy8vIEFVVE8tR0VORVJBVEVEIC8vLy8vLy8vLy8vLy8vLy8vLwovLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vCgovLyBJbml0OiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDEKLy8gRW5kcG9pbnRzOiAgICAgICAgICAgICAgICAgICAgICAgICAgIDE2Ci8vIEFzeW5jIENhbGxiYWNrIChlbXB0eSk6ICAgICAgICAgICAgICAgMQovLyBUb3RhbCBudW1iZXIgb2YgZXhwb3J0ZWQgZnVuY3Rpb25zOiAgMTgKCiMhW25vX3N0ZF0KIyFbZmVhdHVyZShhbGxvY19lcnJvcl9oYW5kbGVyLCBsYW5nX2l0ZW1zKV0KCm11bHRpdmVyc3hfc2Nfd2FzbV9hZGFwdGVyOjphbGxvY2F0b3IhKCk7Cm11bHRpdmVyc3hfc2Nfd2FzbV9hZGFwdGVyOjpwYW5pY19oYW5kbGVyISgpOwoKbXVsdGl2ZXJzeF9zY193YXNtX2FkYXB0ZXI6OmVuZHBvaW50cyEgewogICAgYWdncmVnYXRvcgogICAgKAogICAgICAgIGFnZ3JlZ2F0ZUVnbGQKICAgICAgICBhZ2dyZWdhdGVFc2R0CiAgICAgICAgYWdncmVnYXRlCiAgICAgICAgZ2V0Q2xhaW1hYmVQcm90b2NvbEZlZQogICAgICAgIHJlZ2lzdGVyUHJvdG9jb2xGZWUKICAgICAgICBnZXRDbGFpbWFiZUFzaHN3YXBGZWUKICAgICAgICBnZXRBc2hzd2FwRmVlQWRkcmVzcwogICAgICAgIHJlZ2lzdGVyQXNoc3dhcEZlZQogICAgICAgIGdldFByb3RvY29sRmVlUGVyY2VudAogICAgICAgIGdldEFzaHN3YXBGZWVQZXJjZW50CiAgICAgICAgY2xhaW1Qcm90b2NvbEZlZQogICAgICAgIGNsYWltUHJvdG9jb2xGZWVCeVRva2VucwogICAgICAgIGNsYWltQXNoc3dhcEZlZQogICAgICAgIGNsYWltQXNoc3dhcEZlZUJ5VG9rZW5zCiAgICAgICAgZ2V0RWdsZFdyYXBwZXJBZGRyZXNzCiAgICAgICAgZ2V0RWdsZFdyYXBwZWRUb2tlbklkCiAgICApCn0KCm11bHRpdmVyc3hfc2Nfd2FzbV9hZGFwdGVyOjplbXB0eV9jYWxsYmFjayEge30K",
            "module": "dex/aggregator",
            "dependencyDepth": 0,
            "isTestFile": false
        },
        {
            "path": "common/errors/Cargo.toml",
            "content": "W3BhY2thZ2VdCm5hbWUgPSAiY29tbW9uLWVycm9ycyIKdmVyc2lvbiA9ICIwLjAuMCIKYXV0aG9ycyA9IFsiQmljYXJ1cyA8aGVsbG9AYmljYXJ1cy5pbz4iXQplZGl0aW9uID0gIjIwMjEiCgpbbGliXQpwYXRoID0gInNyYy9saWIucnMiCgpbZGVwZW5kZW5jaWVzLm11bHRpdmVyc3gtc2NdCnZlcnNpb24gPSAiMC40MC4wIgpmZWF0dXJlcyA9IFsiZXNkdC10b2tlbi1wYXltZW50LWxlZ2FjeS1kZWNvZGUiXQo=",
            "module": "common/errors",
            "dependencyDepth": 1,
            "isTestFile": false
        },
        {
            "path": "common/errors/src/lib.rs",
            "content": "IyFbbm9fc3RkXQoKcHViIGNvbnN0IEVSUk9SX0VNUFRZX1BBWU1FTlRTOiAmc3RyID0gIkVtcHR5IHBheW1lbnRzIjsKcHViIGNvbnN0IEVSUk9SX1pFUk9fQU1PVU5UOiAmc3RyID0gIkludmFsaWQgYW1vdW50IHplcm8iOwpwdWIgY29uc3QgRVJST1JfWkVST19UT0tFTl9OT05DRTogJnN0ciA9ICJJbnZhbGlkIHRva2VuIG5vbmNlIjsKCnB1YiBjb25zdCBFUlJPUl9TTElQUEFHRV9TQ1JFV19ZT1U6ICZzdHIgPSAiU2xpcHBhZ2UgdG9vIGhpZ2giOwpwdWIgY29uc3QgRVJST1JfSU5WQUxJRF9BTU9VTlRfSU46ICZzdHIgPSAiSW52YWxpZCBhbW91bnQgaW4iOwpwdWIgY29uc3QgRVJST1JfSU5WQUxJRF9UT0tFTl9JTjogJnN0ciA9ICJJbnZhbGlkIHRva2VuIGluIjsKCnB1YiBjb25zdCBFUlJPUl9PVVRQVVRfTEVOX01JU01BVENIOiAmc3RyID0gIk91dHB1dCBsZW5ndGggbWlzbWF0Y2giOwpwdWIgY29uc3QgRVJST1JfSU5WQUxJRF9QT09MX0FERFI6ICZzdHIgPSAiSW52YWxpZCBwb29sIGFkZHJlc3MiOwoKcHViIGNvbnN0IEVSUk9SX1BST1RPQ09MX05PVF9SRUdJU1RFRDogJnN0ciA9ICJQcm90b2NvbCB1bnJlZ2lzdGVyZWQiOwpwdWIgY29uc3QgRVJST1JfSU5WQUxJRF9GRUVfUEVSQ0VOVDogJnN0ciA9ICJJbnZhbGlkIGZlZSBwZXJjZW50IjsKcHViIGNvbnN0IEVSUk9SX0lOVkFMSURfQUREUkVTUzogJnN0ciA9ICJJbnZhbGlkIGNvbnRyYWN0Ijs=",
            "module": "common/errors",
            "dependencyDepth": 1,
            "isTestFile": false
        },
        {
            "path": "common/structs/Cargo.toml",
            "content": "W3BhY2thZ2VdCm5hbWUgPSAiY29tbW9uLXN0cnVjdHMiCnZlcnNpb24gPSAiMC4wLjAiCmF1dGhvcnMgPSBbIkJpY2FydXMgPGhlbGxvQGJpY2FydXMuaW8+Il0KZWRpdGlvbiA9ICIyMDIxIgoKW2xpYl0KcGF0aCA9ICJzcmMvbGliLnJzIgoKW2RlcGVuZGVuY2llcy5tdWx0aXZlcnN4LXNjXQp2ZXJzaW9uID0gIjAuNDAuMCIKZmVhdHVyZXMgPSBbImVzZHQtdG9rZW4tcGF5bWVudC1sZWdhY3ktZGVjb2RlIl0K",
            "module": "common/structs",
            "dependencyDepth": 1,
            "isTestFile": false
        },
        {
            "path": "common/structs/src/lib.rs",
            "content": "IyFbbm9fc3RkXQoKbXVsdGl2ZXJzeF9zYzo6aW1wb3J0cyEoKTsKbXVsdGl2ZXJzeF9zYzo6ZGVyaXZlX2ltcG9ydHMhKCk7CgojW2Rlcml2ZShUb3BFbmNvZGUsIFRvcERlY29kZSwgTmVzdGVkRW5jb2RlLCBOZXN0ZWREZWNvZGUsIFBhcnRpYWxFcSwgVHlwZUFiaSwgQ2xvbmUsIE1hbmFnZWRWZWNJdGVtKV0KcHViIHN0cnVjdCBUb2tlbkFtb3VudDxNOiBNYW5hZ2VkVHlwZUFwaT4gewogICAgcHViIHRva2VuOiBUb2tlbklkZW50aWZpZXI8TT4sCiAgICBwdWIgYW1vdW50OiBCaWdVaW50PE0+LAp9CgppbXBsPE06IE1hbmFnZWRUeXBlQXBpPiBUb2tlbkFtb3VudDxNPiB7CiAgICBwdWIgZm4gbmV3KHRva2VuOiBUb2tlbklkZW50aWZpZXI8TT4sIGFtb3VudDogQmlnVWludDxNPikgLT4gU2VsZiB7CiAgICAgICAgVG9rZW5BbW91bnQgeyB0b2tlbiwgYW1vdW50IH0KICAgIH0KfQoKI1tkZXJpdmUoVG9wRW5jb2RlLCBUb3BEZWNvZGUsIE5lc3RlZEVuY29kZSwgTmVzdGVkRGVjb2RlLCBQYXJ0aWFsRXEsIFR5cGVBYmksIENsb25lLCBNYW5hZ2VkVmVjSXRlbSldCnB1YiBzdHJ1Y3QgQWdncmVnYXRvclN0ZXA8TTogTWFuYWdlZFR5cGVBcGk+IHsKICAgIHB1YiB0b2tlbl9pbjogVG9rZW5JZGVudGlmaWVyPE0+LAogICAgcHViIHRva2VuX291dDogVG9rZW5JZGVudGlmaWVyPE0+LAogICAgcHViIGFtb3VudF9pbjogQmlnVWludDxNPiwKICAgIHB1YiBwb29sX2FkZHJlc3M6IE1hbmFnZWRBZGRyZXNzPE0+LAogICAgcHViIGZ1bmN0aW9uX25hbWU6IE1hbmFnZWRCdWZmZXI8TT4sCiAgICBwdWIgYXJndW1lbnRzOiBNYW5hZ2VkVmVjPE0sIE1hbmFnZWRCdWZmZXI8TT4+LAp9Cg==",
            "module": "common/structs",
            "dependencyDepth": 1,
            "isTestFile": false
        },
        {
            "path": "common/token_send/Cargo.toml",
            "content": "W3BhY2thZ2VdCm5hbWUgPSAidG9rZW5fc2VuZCIKdmVyc2lvbiA9ICIwLjAuMCIKYXV0aG9ycyA9IFsiQmljYXJ1cyA8aGVsbG9AYmljYXJ1cy5pbz4iXQplZGl0aW9uID0gIjIwMjEiCgpbbGliXQpwYXRoID0gInNyYy9saWIucnMiCgpbZGVwZW5kZW5jaWVzLm11bHRpdmVyc3gtc2NdCnZlcnNpb24gPSAiMC40MC4wIgpmZWF0dXJlcyA9IFsiZXNkdC10b2tlbi1wYXltZW50LWxlZ2FjeS1kZWNvZGUiXQo=",
            "module": "common/token_send",
            "dependencyDepth": 1,
            "isTestFile": false
        },
        {
            "path": "common/token_send/src/lib.rs",
            "content": "IyFbbm9fc3RkXQoKcHViIG1vZCBwcm94eTsKCm11bHRpdmVyc3hfc2M6OmltcG9ydHMhKCk7Cm11bHRpdmVyc3hfc2M6OmRlcml2ZV9pbXBvcnRzISgpOwoKI1tkZXJpdmUoVG9wRW5jb2RlLCBUb3BEZWNvZGUsIE5lc3RlZEVuY29kZSwgTmVzdGVkRGVjb2RlLCBQYXJ0aWFsRXEsIFR5cGVBYmksIENsb25lKV0KcHViIHN0cnVjdCBFZ2xkV3JhcHBlck9wdGlvbjxNOiBNYW5hZ2VkVHlwZUFwaT4gewogICAgcHViIHdyYXBwZWRfZWdsZF90b2tlbl9pZDogVG9rZW5JZGVudGlmaWVyPE0+LAogICAgcHViIGVnbGRfcmV0dXJuOiBib29sLAp9CgojW211bHRpdmVyc3hfc2M6Om1vZHVsZV0KcHViIHRyYWl0IFRva2VuU2VuZE1vZHVsZSB7CiAgICBmbiBzZW5kX211bHRpcGxlX3Rva2Vuc19pZl9ub3RfemVyb19zdXBwb3J0X2VnbGQoJnNlbGYsIGRlc3RpbmF0aW9uOiAmTWFuYWdlZEFkZHJlc3MsIHBheW1lbnRzOiAmTWFuYWdlZFZlYzxFc2R0VG9rZW5QYXltZW50PikgLT4gKE1hbmFnZWRWZWM8RXNkdFRva2VuUGF5bWVudD4sIEVzZHRUb2tlblBheW1lbnQpIHsKICAgICAgICBsZXQgbXV0IG5vbl96ZXJvX3BheW1lbnRzID0gTWFuYWdlZFZlYzo6bmV3KCk7CiAgICAgICAgbGV0IHdyYXBwZWRfZWdsZF90b2tlbl9pZCA9IHNlbGYuZWdsZF93cmFwcGVkX3Rva2VuX2lkKCkuZ2V0KCk7CiAgICAgICAgbGV0IG11dCB1bndyYXBfZWdsZF9wYXltZW50ID0gRXNkdFRva2VuUGF5bWVudDo6bmV3KHdyYXBwZWRfZWdsZF90b2tlbl9pZC5jbG9uZSgpLCAwLCAwdTY0LmludG8oKSk7CiAgICAgICAgZm9yIHBheW1lbnQgaW4gcGF5bWVudHMgewogICAgICAgICAgICBpZiBwYXltZW50LmFtb3VudCA+IDB1NjQgewogICAgICAgICAgICAgICAgaWYgcGF5bWVudC50b2tlbl9pZGVudGlmaWVyID09IHdyYXBwZWRfZWdsZF90b2tlbl9pZCB7CiAgICAgICAgICAgICAgICAgICAgdW53cmFwX2VnbGRfcGF5bWVudC5hbW91bnQgKz0gcGF5bWVudC5hbW91bnQ7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgIG5vbl96ZXJvX3BheW1lbnRzLnB1c2gocGF5bWVudCk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgaWYgIW5vbl96ZXJvX3BheW1lbnRzLmlzX2VtcHR5KCkgewogICAgICAgICAgICBzZWxmLnNlbmQoKS5kaXJlY3RfbXVsdGkoZGVzdGluYXRpb24sICZub25femVyb19wYXltZW50cyk7CiAgICAgICAgfQogICAgICAgIGlmIHVud3JhcF9lZ2xkX3BheW1lbnQuYW1vdW50ID4gMHU2NCB7CiAgICAgICAgICAgIHNlbGYudW53cmFwX2VnbGQodW53cmFwX2VnbGRfcGF5bWVudC5jbG9uZSgpKTsKICAgICAgICAgICAgc2VsZi5zZW5kKCkuZGlyZWN0X2VnbGQoZGVzdGluYXRpb24sICZ1bndyYXBfZWdsZF9wYXltZW50LmFtb3VudCk7CiAgICAgICAgfQogICAgICAgIAogICAgICAgIChub25femVyb19wYXltZW50cywgdW53cmFwX2VnbGRfcGF5bWVudCkKICAgIH0KCiAgICBmbiBzZW5kX211bHRpcGxlX3Rva2Vuc19pZl9ub3RfemVybygmc2VsZiwgZGVzdGluYXRpb246ICZNYW5hZ2VkQWRkcmVzcywgcGF5bWVudHM6ICZNYW5hZ2VkVmVjPEVzZHRUb2tlblBheW1lbnQ+KSAtPiBNYW5hZ2VkVmVjPEVzZHRUb2tlblBheW1lbnQ+IHsKICAgICAgICBsZXQgbXV0IG5vbl96ZXJvX3BheW1lbnRzID0gTWFuYWdlZFZlYzo6bmV3KCk7CiAgICAgICAgZm9yIHBheW1lbnQgaW4gcGF5bWVudHMgewogICAgICAgICAgICBpZiBwYXltZW50LmFtb3VudCA+IDB1NjQgewogICAgICAgICAgICAgICAgbm9uX3plcm9fcGF5bWVudHMucHVzaChwYXltZW50KTsKICAgICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgaWYgIW5vbl96ZXJvX3BheW1lbnRzLmlzX2VtcHR5KCkgewogICAgICAgICAgICBzZWxmLnNlbmQoKS5kaXJlY3RfbXVsdGkoZGVzdGluYXRpb24sICZub25femVyb19wYXltZW50cyk7CiAgICAgICAgfQogICAgICAgIG5vbl96ZXJvX3BheW1lbnRzCiAgICB9CgogICAgZm4gc2VuZF90b2tlbnNfbm9uX3plcm8oJnNlbGYsIHRvOiAmTWFuYWdlZEFkZHJlc3MsIHRva2VuX2lkOiAmVG9rZW5JZGVudGlmaWVyLCBub25jZTogdTY0LCBhbW91bnQ6ICZCaWdVaW50KSAtPiBPcHRpb248RXNkdFRva2VuUGF5bWVudD4gewogICAgICAgIGlmIGFtb3VudCA+ICYwIHsKICAgICAgICAgICAgc2VsZi5zZW5kKCkuZGlyZWN0X2VzZHQodG8sIHRva2VuX2lkLCBub25jZSwgYW1vdW50KTsKICAgICAgICAgICAgcmV0dXJuIFNvbWUoRXNkdFRva2VuUGF5bWVudDo6bmV3KHRva2VuX2lkLmNsb25lKCksIG5vbmNlLCBhbW91bnQuY2xvbmUoKSkpOwogICAgICAgIH0KICAgICAgICBOb25lCiAgICB9CgogICAgZm4gd3JhcF9lZ2xkKCZzZWxmLCBhbW91bnQ6IEJpZ1VpbnQpIC0+IEVzZHRUb2tlblBheW1lbnQgewogICAgICAgIGxldCBfOiBJZ25vcmVWYWx1ZSA9IHNlbGYuZWdsZF93cmFwcGVyX3Byb3h5KHNlbGYuZWdsZF93cmFwcGVyX2FkZHJlc3MoKS5nZXQoKSkKICAgICAgICAud3JhcF9lZ2xkKCkKICAgICAgICAud2l0aF9lZ2xkX3RyYW5zZmVyKGFtb3VudC5jbG9uZSgpKQogICAgICAgIC5leGVjdXRlX29uX2Rlc3RfY29udGV4dCgpOwogICAgICAgIEVzZHRUb2tlblBheW1lbnQ6Om5ldyhzZWxmLmVnbGRfd3JhcHBlZF90b2tlbl9pZCgpLmdldCgpLCAwLCBhbW91bnQpCiAgICB9CgogICAgZm4gdW53cmFwX2VnbGQoJnNlbGYsIHBheW1lbnQ6IEVzZHRUb2tlblBheW1lbnQpIHsKICAgICAgICBsZXQgXzogSWdub3JlVmFsdWUgPSBzZWxmLmVnbGRfd3JhcHBlcl9wcm94eShzZWxmLmVnbGRfd3JhcHBlcl9hZGRyZXNzKCkuZ2V0KCkpCiAgICAgICAgLnVud3JhcF9lZ2xkKCkKICAgICAgICAud2l0aF9lc2R0X3RyYW5zZmVyKHBheW1lbnQpCiAgICAgICAgLmV4ZWN1dGVfb25fZGVzdF9jb250ZXh0KCk7CiAgICB9CgogICAgI1twcm94eV0KICAgIGZuIGVnbGRfd3JhcHBlcl9wcm94eSgmc2VsZiwgdG86IE1hbmFnZWRBZGRyZXNzKSAtPiBwcm94eTo6UHJveHk8U2VsZjo6QXBpPjsKCiAgICAjW3ZpZXcoZ2V0RWdsZFdyYXBwZXJBZGRyZXNzKV0KICAgICNbc3RvcmFnZV9tYXBwZXIoImVnbGRfd3JhcHBlcl9hZGRyZXNzIildCiAgICBmbiBlZ2xkX3dyYXBwZXJfYWRkcmVzcygmc2VsZikgLT4gU2luZ2xlVmFsdWVNYXBwZXI8TWFuYWdlZEFkZHJlc3M+OwoKICAgICNbdmlldyhnZXRFZ2xkV3JhcHBlZFRva2VuSWQpXQogICAgI1tzdG9yYWdlX21hcHBlcigiZWdsZF93cmFwcGVkX3Rva2VuX2lkIildCiAgICBmbiBlZ2xkX3dyYXBwZWRfdG9rZW5faWQoJnNlbGYpIC0+IFNpbmdsZVZhbHVlTWFwcGVyPFRva2VuSWRlbnRpZmllcj47Cn0K",
            "module": "common/token_send",
            "dependencyDepth": 1,
            "isTestFile": false
        },
        {
            "path": "common/token_send/src/proxy.rs",
            "content": "bXVsdGl2ZXJzeF9zYzo6aW1wb3J0cyEoKTsKbXVsdGl2ZXJzeF9zYzo6ZGVyaXZlX2ltcG9ydHMhKCk7CgojW211bHRpdmVyc3hfc2M6OnByb3h5XQpwdWIgdHJhaXQgRWdsZFdyYXBwZXIgewogICAgI1twYXlhYmxlKCJFR0xEIildCiAgICAjW2VuZHBvaW50KHdyYXBFZ2xkKV0KICAgIGZuIHdyYXBfZWdsZCgmc2VsZikgLT4gRXNkdFRva2VuUGF5bWVudDxTZWxmOjpBcGk+OwoKICAgICNbcGF5YWJsZSgiKiIpXQogICAgI1tlbmRwb2ludCh1bndyYXBFZ2xkKV0KICAgIGZuIHVud3JhcF9lZ2xkKCZzZWxmKTsKICAgIAogICAgI1t2aWV3KGdldFdyYXBwZWRFZ2xkVG9rZW5JZCldCiAgICBmbiBnZXRfd3JhcHBlZF9lZ2xkX3Rva2VuX2lkKCZzZWxmKSAtPiBUb2tlbklkZW50aWZpZXI7Cn0K",
            "module": "common/token_send",
            "dependencyDepth": 1,
            "isTestFile": false
        }
    ]
}